# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
#      - image: bitnami/laravel
#      - image: bitnami/mysql
#        environment:
#          - MYSQL_PASSWORD=123@123a
#          - MYSQL_DATABASE=testing
#          - MYSQL_ROOT_HOST=%
#          - DB_HOST=127.0.0.1
#          - DB_PORT=3306
#          - MYSQL_USER=luonglit
#          - MYSQL_ROOT_PASSWORD=123@123a
      - image: circleci/php:7.1-apache-node-browsers # The primary container where steps are run
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_PASSWORD: 123@123a
          MYSQL_DATABASE: testing
          MYSQL_USER: luonglit
          MYSQL_PASSWORD: 123@123a

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout
      -
      - run:
        # Our primary container isn't MYSQL so run a sleep command until it's ready.
        name: Waiting for MySQL to be ready
        command: |
          for i in `seq 1 10`;
          do
          nc -z 127.0.0.1 3306 && echo Success && exit 0
          echo -n .
          sleep 1
          done
          echo Failed waiting for MySQL && exit 1

      - run:
        name: Install MySQL CLI; Import dummy data; run an example query
        command: |
          sudo apt-get install default-mysql-client
          mysql -h 127.0.0.1 -u luonglit -p123@123a --execute="show tables;"
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # prepare the database
      - run: mysql -u root -p 123@123a -e 'show databases;'
      - run: cp .env.testing.template .env.testing
      - run: php artisan key:generate --env=testing
      - run: php artisan migrate --env=testing --force

      # run tests with phpunit or codecept
      - run: ./vendor/bin/phpunit
      - run: ./vendor/bin/phpcs

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
